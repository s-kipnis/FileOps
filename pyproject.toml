[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "file_ops"
version = "0.1.0"
description = "Minimal backend skeleton: FastAPI + uv + ruff + mypy + pylint + pytest"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [{ name = "Sergej Kipnis", email = "skipnis@gmail.com" }]
dependencies = [
  "fastapi>=0.115",
  "uvicorn[standard]>=0.30",
]

[project.optional-dependencies]
dev = [
  "pytest",
  "httpx",
  "pytest-asyncio",  # optional
  "ruff",
  "mypy",
  "pylint",
]

[project.urls]
Homepage = "https://example.com"

[project.scripts]
file-ops = "file_ops.__main__:main"

[tool.uv]
# optional uv settings

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["build", "dist", ".venv"]

[tool.ruff.lint]
select = ["E","F","I","UP","B","W","SIM"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"src/file_ops/__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
pretty = true
exclude = "(build|dist|\\.venv)"

[tool.pylint.main]
py-version = "3.11"
jobs = 0
recursive = true
ignore = ["build","dist",".venv"]
load-plugins = []

[tool.pylint.basic]
good-names = ["_","i","j","k","x","y","z","db","id"]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
disable = [
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
  "R0903", # too-few-public-methods
]
